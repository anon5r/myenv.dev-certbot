#!/bin/sh
GCS_BUCKET_NAME=${GCS_BUCKET_NAME:-GS_BUCKET_NAME}
CERTBOT_EMAIL=${CERTBOT_EMAIL:-user\@example.com}
CERTBOT_DOMAIN=${CERTBOT_DOMAIN:-www.example.com}
GCSMP=/mnt/gcs/$GCS_BUCKET_NAME
HTTP_SERVER_PORT=${PORT:-8080}
HTTP_SERVER_RUNNING_TIMEOUT=${HTTP_SERVER_RUNNING_TIMEOUT:-20}

LE_DIR=/etc/letsencrypt
CF_CREDENTIAL=/etc/letsencrypt/cloudflare/cloudflare.ini

PLUGIN_OPT="--dns-cloudflare --dns-cloudflare-credentials $CF_CREDENTIAL --dns-cloudflare-propagation-seconds 5"

DEBUG=0

if [ $# -ne 0 ] && [ $1 = "debug" ] ; then
    DEBUG=1
fi

echo "Start HTTP server HTTP_SERVER_PORT=$HTTP_SERVER_PORT, will terminate later $HTTP_SERVER_RUNNING_TIMEOUT sec."
timeout $HTTP_SERVER_RUNNING_TIMEOUT python -m http.server $HTTP_SERVER_PORT &


crond -b -l 0 -L /var/log/cron.log
/bin/sh /opt/var/initializer

if [ $DEBUG -eq 1 ] ; then
    echo -n "If you want continue, type \"go\": "
    while read READ_DEBUG
    do
        case $READ_DEBUG in
            "go" )
                break
                ;;
            * )
                echo -n "If you want tcontinue, type \"go\": "
        esac
    done
fi


if [ $DEBUG -eq 1 ] ; then
    if [ -e $LE_DIR/archives/$CERTBOT_DOMAIN ] ; then
        certbot \
            renew \
            --dry-run \
            $PLUGIN_OPT
    else
        certbot \
            certonly \
            --staging \
            --agree-tos \
            --register-unsafely-without-email \
            --email ${CERTBOT_EMAIL} \
            --preferred-challenges dns-01 \
            --noninteractive \
            -d $CERTBOT_DOMAIN \
            -d "*.${CERTBOT_DOMAIN}" \
            $PLUGIN_OPT
    fi
else
    if [ $# -ne 0 ]; then
        certbot $@

    elif [ -e $LE_DIR/archives/$CERTBOT_DOMAIN ] ; then
        certbot \
            renew \
            $PLUGIN_OPT
    else 
        certbot \
            certonly \
            --agree-tos \
            --register-unsafely-without-email \
            --email ${CERTBOT_EMAIL} \
            --preferred-challenges dns-01 \
            --noninteractive \
            -d $CERTBOT_DOMAIN \
            -d "*.${CERTBOT_DOMAIN}" \
            $PLUGIN_OPT
    fi
fi

if [ $? -eq 0 ] ; then
    # Copy certificates
    echo "Saving certificates..."
    cp -rfL $LE_DIR/live/$CERTBOT_DOMAIN $GCSMP/certs/

    echo "Saving Let's Encrypt configurations..."
    if [ -e $LE_DIR/accounts ] ; then
        cp -rfL $LE_DIR/accounts $GCSMP/letsencrypt/
    fi
    if [ -e $LE_DIR/csr ] ; then
        cp -rfL $LE_DIR/csr $GCSMP/letsencrypt/
    fi
    if [ -e $LE_DIR/keys ] ; then
        cp -rfL $LE_DIR/keys $GCSMP/letsencrypt/
    fi
    if [ -e $LE_DIR/renewal ] ; then
        cp -rfL $LE_DIR/renewal $GCSMP/letsencrypt/
    fi
    if [ -e $LE_DIR/renewal-hooks ] ; then
        cp -rfL $LE_DIR/renewal-hooks $GCSMP/letsencrypt/
    fi
    if [ -e $LE_DIR/archive ] ; then
        cp -rfL $LE_DIR/archive $GCSMP/letsencrypt/
    fi
fi


if [ $DEBUG -eq 1 ] ; then
    # debug
    echo -n "If you want to finish, type \"end\": "
    while read READ_DEBUG
    do
        case $READ_DEBUG in
            "end" )
                break
                ;;
            * )
                echo -n "If you want to finish, type \"end\": "
        esac
    done
fi
# Unmount
umount /mnt/gcs/$GCS_BUCKET_NAME

